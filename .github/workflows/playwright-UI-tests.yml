# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Playwright UI tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose test suite
        required: true
        type: choice
        default: All
        options:
          - Smoke
          - Regression
          - All
    

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    #if: false
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: >
          ARTIFACT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Windrunner9638/playwright-python/actions/artifacts?name=allure_results" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.ACTIONS_TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/Windrunner9638/playwright-python/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip &&
          REPORT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Windrunner9638/playwright-python/actions/artifacts?name=github-pages" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.ACTIONS_TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/Windrunner9638/playwright-python/actions/artifacts/$REPORT_ID/zip 
          -o pages.zip
      - run: mkdir allure_results && unzip artifacts.zip -d allure_results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure_results && cp -r pages_history/history allure_results
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure_results
          path:
            allure_results
          retention-days: 7
          
  run-tests:
    runs-on: ubuntu-latest
    needs: download-history
    name: Run UI tests
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Install Playwright browsers
      run: python -m playwright install --with-deps
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: Run all tests
      if: "github.event.inputs.deployment_target == 'All'"
      run: pytest
      continue-on-error: true
    - name: Run smoke tests
      if: "github.event.inputs.deployment_target == 'Smoke'"
      run: pytest -m smoke
      continue-on-error: true
    - name: Run regression tests
      if: "github.event.inputs.deployment_target == 'Regression'"
      run: pytest -m regression
      continue-on-error: true
    - name: Store allure results
      uses: actions/upload-artifact@v3
      with:
        name: allure_results
        path:
            allure_results
        retention-days: 7

  generate-report:
    runs-on: ubuntu-latest
    needs: run-tests
    name: Generate report
    steps:
    - name: Install JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '21'
    - name: Install Allure
      run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.30.0/allure-2.30.0.tgz && sudo tar -zxvf allure-2.30.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.30.0/bin/allure /usr/bin/allure
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: Generate Allure report
      run: allure generate -c allure_results -o _site
    - name: Save Allure report
      uses: actions/upload-artifact@v3
      with:
        name: _site
        path: _site
        retention-days: 7
        
  publish-report:
    name: Report publication
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
  
